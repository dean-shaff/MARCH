// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum BUILDING_TYPOLOGY{
RESIDENTIAL
COMMERCIAL
INDUSTRIAL
INSTITUTIONAL
}

// model User {
//   id    String    @default(cuid()) @id
//   email String  @unique
//   submissions Project[]
// }

model Project {
  id        String     @default(cuid()) @id
  createdAt DateTime @default(now()) @db.Timestamp
  title     String
  description   String?
  location String
  yearCompleted Int
  typology BUILDING_TYPOLOGY
  // author    User   @relation(fields: [authorId], references: [id])
  // authorId  String
  authorEmail String
  images Image[]
  materials Material[]
  projectMaterial ProjectMaterial[]
  selectedForCompetition Boolean @default(false)
}

model Image {
  id  String @default(cuid()) @id
  url String
  project Project @relation(fields: [projectId], references: [id])
  projectId String
}

model Supplier {
  id String @default(cuid()) @id
  name String
  materials Material[]
  website String?
}

model Material {
  id String @default(cuid()) @id
  name String
  description String
  supplier Supplier @relation(fields: [supplierId], references: [id])
  supplierId String
  url String
  projects Project[]
  projectMaterials ProjectMaterial[]
}

model ProjectMaterial {
  id String @default(cuid()) @id
  material Material @relation(fields: [materialId], references: [id])
  materialId String
  project Project @relation(fields: [projectId], references: [id])
  projectId String
  usedWhere String
}